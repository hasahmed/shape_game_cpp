# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
trigger:
- master

stages:
- stage: Build
  jobs:
  # - job: WindowsBuild

  #   pool:
  #     vmImage: 'windows-latest'

  #   variables:
  #     solution: '**/*.sln'
  #     buildPlatform: 'x64'
  #     buildConfiguration: 'Release'

  #   steps:
  #   #- task: NuGetToolInstaller@1

  #   #- task: NuGetCommand@2
  #   #inputs:
  #   #restoreSolution: '$(solution)'

  #   - task: VSBuild@1
  #     inputs:
  #       solution: '$(solution)'
  #       platform: '$(buildPlatform)'
  #       configuration: '$(buildConfiguration)'
       
  #   - powershell: 'ls $(System.DefaultWorkingDirectory)'

  #   - publish: $(System.DefaultWorkingDirectory)\dist-libs\platform\win\shapegame.lib
  #     artifact: WindowsBinary


  # - job: LinuxBuild

  #   pool:
  #     vmImage: 'ubuntu-latest'

  #   variables:
  #     solution: '**/*.sln'
  #     buildPlatform: 'x64'
  #     buildConfiguration: 'Release'

  #   steps:
  #   - script: 'make -j5 dist-linux'

  #   - publish: $(System.DefaultWorkingDirectory)/dist-libs/platform/linux/shapegame.a
  #     artifact: LinuxBinary

  #   # - task: DownloadBuildArtifacts@0
  #   #   inputs:
  #   #     buildType: 'current'
  #   #     downloadType: 'single'
  #   #     artifactName: 'drop'
  #   #     downloadPath: '$(System.ArtifactsDirectory)'


  - job: MacBuild

    pool:
      vmImage: 'macOS-10.13'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'x64'
      buildConfiguration: 'Release'

    steps:
    - script: 'make -j5 dist-mac'

    - publish: $(System.DefaultWorkingDirectory)/dist-libs/platform/mac/shapegame.a
      artifact: 'MacBinary'

- stage: PackageAndDeploy
  jobs:
  - job: PackageAndDeployJob
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      solution: '**/*.sln'
      buildPlatform: 'x64'
      buildConfiguration: 'Release'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'specific'
        project: 'shapegame'
        pipeline: 'hasahmed.shape_game_cpp'
        downloadType: 'single'
        artifactName: 'MacBinary'
        downloadPath: '$(System.ArtifactsDirectory)'
    # - task: CopyFiles@2
    #   inputs:
    #     sourceFolder: 
    - bash: 'ls $(System.ArtifactsDirectory)/'