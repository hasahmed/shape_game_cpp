# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

jobs:
  job: Windows
    trigger:
    - master

    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'x64'
      buildConfiguration: 'Release'

    steps:
    #- task: NuGetToolInstaller@1

    #- task: NuGetCommand@2
    #inputs:
    #restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    #- task: VSTest@2
    #inputs:
    #platform: '$(buildPlatform)'
    #configuration: '$(buildConfiguration)'

  job: Linux
    trigger:
    - master

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'x64'
      buildConfiguration: 'Release'

    steps:
    #- task: NuGetToolInstaller@1

    #- task: NuGetCommand@2
    #inputs:
    #restoreSolution: '$(solution)'

    - task: Bash@3
       script: 'echo Hello world!'

    #- task: VSTest@2
    #inputs:
    #platform: '$(buildPlatform)'
    #configuration: '$(buildConfiguration)'

  job: Mac
    trigger:
    - master

    pool:
      vmImage: 'macOS-10.13'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'x64'
      buildConfiguration: 'Release'

    steps:
    #- task: NuGetToolInstaller@1

    #- task: NuGetCommand@2
    #inputs:
    #restoreSolution: '$(solution)'

    - task: Bash@3
       script: 'echo Goodbye world!'