# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
trigger:
- master

stages:
- stage: Build
  jobs:
  # - job: WindowsBuild

  #   pool:
  #     vmImage: 'windows-latest'

  #   variables:
  #     solution: '**/*.sln'
  #     buildPlatform: 'x64'
  #     buildConfiguration: 'Release'

  #   steps:
  #   #- task: NuGetToolInstaller@1

  #   #- task: NuGetCommand@2
  #   #inputs:
  #   #restoreSolution: '$(solution)'

  #   - task: VSBuild@1
  #     inputs:
  #       solution: '$(solution)'
  #       platform: '$(buildPlatform)'
  #       configuration: '$(buildConfiguration)'
       
  #   - powershell: 'ls $(System.DefaultWorkingDirectory)'

  #   - publish: $(System.DefaultWorkingDirectory)\dist-libs\platform\win\shapegame.lib
  #     artifact: WindowsBinaries


  - job: LinuxBuild

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'x64'
      buildConfiguration: 'Release'

    steps:
    - script: 'make -j5 dist-linux'

    # - task: DownloadBuildArtifacts@0
    #   inputs:
    #     buildType: 'current'
    #     downloadType: 'single'
    #     artifactName: 'drop'
    #     downloadPath: '$(System.ArtifactsDirectory)'


    - bash: 'ls $(System.ArtifactsDirectory)'

#   - job: MacBuild

#     pool:
#       vmImage: 'macOS-10.13'

#     variables:
#       solution: '**/*.sln'
#       buildPlatform: 'x64'
#       buildConfiguration: 'Release'

#     steps:
#     #- task: NuGetToolInstaller@1

#     #- task: NuGetCommand@2
#     #inputs:
#     #restoreSolution: '$(solution)'

#     - bash: 'echo hello world'
#     # - task: Bash@3
#     #   inputs:
#     #     script: 'echo Goodbye world!'

# - stage: PackageAndDeploy
#   jobs:
#   - job: PackageAndDeployJob
#     pool:
#       vmImage: 'macOS-10.13'
#     variables:
#       solution: '**/*.sln'
#       buildPlatform: 'x64'
#       buildConfiguration: 'Release'
#     steps:
#     - bash: 'echo hello world'